.. _single-vs-inst:

Video Server Node
=================

This section contains the architectural diagram, requirements, network
configuration, and directions to set up the additional *Video
Server* Node.

Architecture
============

The architecture of this scenario is depicted in the following diagram.

.. _fig-single-vs:

.. figure:: /img/carbonio/scenario-single-vs.png
   :width: 79%
   :align: center

   Sample diagram of Video Server Node within the Single Server
   scenario.

Requirements
============

Hardware Requirements for the Video Server Node are:

* 8 vCPU
* 8 GB memory
* 50 GB disk space

Network Configuration
=====================

The following ports must be forwarded from the :ref:`external network
<fw-external>`, i.e., they are required for proper access to |product|
from the Internet.

.. table:: Forwarded ports in Scenario *Single Server*.

   +-------------------+--------------------------+------------------+
   | Public hostname   | Ports & Service          | Mapping          |
   +===================+==========================+==================+
   | mail.example.com  | * UDP 20000/40000 Video  | srv3.example.com |
   |                   |   Streaming              |                  |
   +-------------------+--------------------------+------------------+

Video Server Node Installation
==============================

Directions are separated in steps, organised in drop-downs. Click each
of them to expand the content.

.. dropdown:: Step 1: Configuration of Repositories

   .. rubric:: |product|

   .. include:: /_includes/_installation/step-repo-conf.rst

.. dropdown:: Step 2: Setting Hostname

   .. include:: /_includes/_installation/steps-hostname.rst

.. dropdown:: Step 3: System Upgrade and Package Installation

   After configuring the repositories, the installation of |product|
   requires to run a few commands.

   We start by updating and upgrading the system.

   .. include:: /_includes/_installation/pkg-upgrade.rst

   Next, we install all packages needed for |product|.

   .. tab-set::

      .. tab-item:: Ubuntu 22.04
         :sync: ubu22

         .. code:: console

            # apt install service-discover-agent \
            carbonio-videoserver-advanced carbonio-videorecorder

      .. tab-item:: Ubuntu 24.04
         :sync: ubu24

         .. code:: console

            # apt install service-discover-agent \
            carbonio-videoserver-advanced carbonio-videorecorder

      .. tab-item:: RHEL 8
         :sync: rhel8

         .. code:: console

            # dnf install service-discover-agent \
            carbonio-videoserver-advanced carbonio-videorecorder

      .. tab-item:: RHEL 9
         :sync: rhel9

         .. code:: console

            # dnf install service-discover-agent \
            carbonio-videoserver-advanced carbonio-videorecorder


.. dropdown:: Step 4: Bootstrap |product|

   To carry out this step, you need the **LDAP password** and the
   **Node hostname** that you have retrieved at Step 9 of the Core
   Node (see :ref:`Step 9 <n1-s9>`).

   .. include:: /_includes/_installation/step-bootstrap.rst

.. dropdown:: Step 5: Setup |mesh|

   To carry out this step, you need the |mesh| **secret** generated
   during the installation of the Core Node (see :ref:`Step 9
   <n1-s9>`).

   The |mesh| configuration is interactively generated by command

   .. code:: console

      # service-discover setup-wizard

   To complete |mesh| installation, run

   .. code:: console

      # pending-setups -a

.. dropdown:: Step 6: Configure |vs|

   .. rubric:: 1. Routing & mapping

   .. include:: /_includes/_installation/note-janus.rst

   Finally, enable and start the service with the commands

   .. code:: console

      # systemctl enable carbonio-videoserver.service
      # systemctl start  carbonio-videoserver.service

   .. rubric:: 2. Check Video Server & Broker

   To make sure that videoserver and message broker are connected
   successfully, check that in the carbonio-videoserver logs
   (:command:`journalctl -u carbonio-videoserver`) you find the line::

     RabbitMQEventHandler: Connected successfullySetup of RabbitMQ event
     handler completed
